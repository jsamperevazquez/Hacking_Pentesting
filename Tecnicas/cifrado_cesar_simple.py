# Definición del alfabeto
alfabeto = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U',
            'V', 'W', 'X', 'Y', 'Z']


def cifrado_cesar(texto: str, desplazamiento: int = 3) -> str:
    """
        Aplica el cifrado César a un texto dado con un número de desplazamiento especificado.

        El cifrado César desplaza cada letra del texto según un número de posiciones en el alfabeto.
        Solo funciona con letras mayúsculas. Los caracteres como espacios, comas, puntos y dos puntos
        se conservan sin cambios. Si el texto contiene algún carácter que no esté en mayúsculas o
        no pertenezca al alfabeto, se devuelve un mensaje de error.

        Args:
            texto (str): El texto que se quiere cifrar. Debe contener solo letras mayúsculas.
            desplazamiento (int): El número de posiciones por las que se desplazarán las letras en el alfabeto.

        Returns:
            str: El texto cifrado si todos los caracteres son válidos, o un mensaje de error si hay caracteres no válidos.
        """
    texto_cifrado = ""
    for letra in texto:
        if letra in alfabeto:
            # Calculamos el nuevo índice
            indice_nuevo: int = (alfabeto.index(letra) + desplazamiento) % len(alfabeto)
            # Añadimos la letra correspondiente al resultado
            texto_cifrado += alfabeto[indice_nuevo]
        elif letra in " ,.:":  # Si es un espacio, coma, punto o dos puntos, lo añadimos directamente
            texto_cifrado += letra
        else:  # Si no está en el alfabeto
            return "Todos los caracteres deben estar en mayúsculas y dentro del alfabeto."
    return texto_cifrado


def descifrado_cesar(texto_cifrado: str, desplazamiento: int = 3) -> str:
    """
            Aplica el descifrado César a un texto dado con un número de desplazamiento especificado.

            Desplaza cada letra del texto según un número de posiciones en el alfabeto.
            Solo funciona con letras mayúsculas. Los caracteres como espacios, comas, puntos y dos puntos
            se conservan sin cambios. Si el texto contiene algún carácter que no esté en mayúsculas o
            no pertenezca al alfabeto, se devuelve un mensaje de error.

            Args:
                texto (str): El texto que se quiere descifrar. Debe contener solo letras mayúsculas.
                desplazamiento (int): El número de posiciones por las que se desplazarán las letras en el alfabeto.

            Returns:
                str: El texto descifrado si todos los caracteres son válidos, o un mensaje de error si hay caracteres no válidos.
            """
    texto_descifrado = ""
    for letra in texto_cifrado:
        if letra in alfabeto:
            # Calculamos el índice original
            indice_original: int = (alfabeto.index(letra) - desplazamiento) % len(alfabeto)
            texto_descifrado += alfabeto[indice_original]
        elif letra in " ,.:":  # Si es un espacio, coma, punto o dos puntos, lo añadimos directamente
            texto_descifrado += letra
        else:  # Si no está en el alfabeto
            return "Todos los caracteres deben estar en mayúsculas y dentro del alfabeto."
    return texto_descifrado


print(cifrado_cesar("HOLA, MUNDO"))
print(descifrado_cesar(cifrado_cesar("HOLA MUNDO")))
