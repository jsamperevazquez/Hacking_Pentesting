class Dispositivo:
    """
    Clase base para diferentes tipos de dispositivos de red.

    Atributos:
    ----------
    nombre : str
        Nombre del dispositivo.
    ubicacion : str
        Ubicación donde se encuentra el dispositivo.
    interfaces : list
        Lista de objetos de la clase Interfaz asociados al dispositivo.

    Métodos:
    --------
    add_interfaz(interfaz):
        Añade una interfaz a la lista de interfaces del dispositivo.
    mostrar_info():
        Muestra la información del dispositivo y las interfaces asociadas.
    """
    def __init__(self, nombre: str, ubicacion: str) -> None:
        """
        Inicializa un objeto de la clase Dispositivo.

        Parámetros:
        -----------
        nombre : str
            Nombre del dispositivo.
        ubicacion : str
            Ubicación del dispositivo.
        """
        self.nombre = nombre
        self.ubicacion = ubicacion
        self.interfaces: list = []

    def add_interfaz(self, interfaz) -> None:
        """
        Añade una interfaz a la lista de interfaces del dispositivo.

        Parámetros:
        -----------
        interfaz : Interfaz
            Objeto de la clase Interfaz que representa una interfaz de red.
        """
        self.interfaces.append(interfaz)

    def mostrar_info(self):
        """
        Imprime la información del dispositivo y las interfaces asociadas.
        """
        print(f"Dispositivo: {self.nombre},\n"
              f"Ubicación: {self.ubicacion}")
        for interface in self.interfaces:
            print(f"Interfaz: {interface.nombre}, IP: {interface.ip}")


class Interfaz:
    """
    Clase que representa una interfaz de red.

    Atributos:
    ----------
    nombre : str
        Nombre de la interfaz.
    ip : str
        Dirección IP asociada a la interfaz.
    """
    def __init__(self, nombre: str, ip: str) -> None:
        """
        Inicializa un objeto de la clase Interfaz.

        Parámetros:
        -----------
        nombre : str
            Nombre de la interfaz de red.
        ip : str
            Dirección IP asociada a la interfaz.
        """
        self.nombre = nombre
        self.ip = ip


class Router(Dispositivo):
    """
    Clase que representa un router, derivada de la clase Dispositivo.

    Atributos adicionales:
    ----------------------
    modelo : str
        Modelo del router.
    """
    def __init__(self, nombre: str, ubicacion: str, modelo: str) -> None:
        """
        Inicializa un objeto de la clase Router.

        Parámetros:
        -----------
        nombre : str
            Nombre del router.
        ubicacion : str
            Ubicación del router.
        modelo : str
            Modelo del router.
        """
        super().__init__(nombre, ubicacion)
        self.modelo = modelo


class Switch(Dispositivo):
    """
    Clase que representa un switch, derivada de la clase Dispositivo.

    Atributos adicionales:
    ----------------------
    tipo : str
        Tipo de switch (por ejemplo, Capa 2 o Capa 3).
    """
    def __init__(self, nombre: str, ubicacion: str, tipo: str) -> None:
        """
        Inicializa un objeto de la clase Switch.

        Parámetros:
        -----------
        nombre : str
            Nombre del switch.
        ubicacion : str
            Ubicación del switch.
        tipo : str
            Tipo de switch (Capa 2 o Capa 3).
        """
        super().__init__(nombre, ubicacion)
        self.tipo = tipo


# Creación de objetos y adición de interfaces
cisco_router = Router("Router1", " Data Center", "Cisco 2901")
cisco_router.add_interfaz(Interfaz("GigabitEthernet0/0", "192.168.1.1"))
cisco_router.add_interfaz(Interfaz("GigabitEthernet0/1", "192.168.2.1"))

switch_rtc = Switch("Switch1", "Oficina Principal", "Capa 3")
switch_rtc.add_interfaz(Interfaz("FastEthernet0/1", "192.168.1.2"))
switch_rtc.add_interfaz(Interfaz("FastEthernet0/2", "192.168.1.3"))

# Muestra la información de los dispositivos
cisco_router.mostrar_info()
switch_rtc.mostrar_info()
